// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/karavi-topology/internal/service (interfaces: VolumeInfoGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	k8s "github.com/dell/karavi-topology/internal/k8s"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVolumeInfoGetter is a mock of VolumeInfoGetter interface
type MockVolumeInfoGetter struct {
	ctrl     *gomock.Controller
	recorder *MockVolumeInfoGetterMockRecorder
}

// MockVolumeInfoGetterMockRecorder is the mock recorder for MockVolumeInfoGetter
type MockVolumeInfoGetterMockRecorder struct {
	mock *MockVolumeInfoGetter
}

// NewMockVolumeInfoGetter creates a new mock instance
func NewMockVolumeInfoGetter(ctrl *gomock.Controller) *MockVolumeInfoGetter {
	mock := &MockVolumeInfoGetter{ctrl: ctrl}
	mock.recorder = &MockVolumeInfoGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVolumeInfoGetter) EXPECT() *MockVolumeInfoGetterMockRecorder {
	return m.recorder
}

// GetPersistentVolumes mocks base method
func (m *MockVolumeInfoGetter) GetPersistentVolumes() ([]k8s.VolumeInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersistentVolumes")
	ret0, _ := ret[0].([]k8s.VolumeInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersistentVolumes indicates an expected call of GetPersistentVolumes
func (mr *MockVolumeInfoGetterMockRecorder) GetPersistentVolumes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersistentVolumes", reflect.TypeOf((*MockVolumeInfoGetter)(nil).GetPersistentVolumes))
}
